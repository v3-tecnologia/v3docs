"use strict";(self.webpackChunkv3_docs=self.webpackChunkv3_docs||[]).push([[2917],{29337:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>y,contentTitle:()=>v,default:()=>q,frontMatter:()=>u,metadata:()=>n,toc:()=>f});const n=JSON.parse('{"id":"openapi/managements/list-devices-with-pagination","title":"List devices with pagination","description":"FindAll handles HTTP GET requests to retrieve device records.","source":"@site/docs/openapi/managements/list-devices-with-pagination.api.mdx","sourceDirName":"openapi/managements","slug":"/openapi/managements/list-devices-with-pagination","permalink":"/docs/openapi/managements/list-devices-with-pagination","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-devices-with-pagination","title":"List devices with pagination","description":"FindAll handles HTTP GET requests to retrieve device records.","sidebar_label":"List devices with pagination","hide_title":true,"hide_table_of_contents":true,"api":"eJztVs1uGzcQfpUBTy0gyFKLXnwzmjR168ZGIvcSG8Jod6RlyiW35KxiRdDDFD30QfxineHqL/baQW5B0dMuyZn5Zj7OD9empFRE27AN3pyan6wvz5yDCn3pKMHPk8kVvHo5gUh/tpQ4AQf552hpSVDS0hYk6yLEMg1v/DlDapsmRBEM2SY6mFvHFK1fwGwFZLmiCDemdba8MRD039Zk5V8Q4goajFiTaKQBzFoGHxhmgStItm4do6fQJrcStCtcWI+KAjbtgKmEpUUx2uCCxKgEsl1Mk/1IvTAfxCkJZo5iXxyfwzirjUcDiS01VLBdUoacVAQ13oknNaBz4YPAqW1Q2+rFeDQSsTfEbfQJEH55e/k6Gwk+ERTBM1qvXAgNqqkBiI2OyaR0oAeKUX5qSklN23kW3t6Agli/RKFvK229RKFEd2qhKNqYhmZgDiGa03frBzd9paZ9W8/kNr7Zxn4K429Fz+p5ZkkWXkzIUoOUVSoqqtGcrg2vGt1X8AVFs9kMehEyL0f2hVLhT39Gz0Hlu3oe73ZgdrwmFfhuNNLPpz5c/ipGlHXyrKfYNM4WOWdO3icVWR9hNDE0FNl2BkvkvGuZ6vT4GFsOtVgqppr/C287yL2nsxAcoTcbcUC15opLU1seySTWusgikTQRpsiPkdgqLz1KOQseB/17Tg7JE45tTp+JGNC1ltLr64sL4eShk5v9Vpi9l4RX8yU5+tp8mjsi/pTEfUpIOhXFE/w+qSGtp1ehDhJ+70lTBU/TrnR6BVr3hBNtU35ll9xH8XYDY8RVjldLv5e8Q6X2HnNgdNN9+TwloFZ6BXrc1b0f+gr9fNcE31JcSkt7qb3wC2p/09lmXGizNC9yPzbSY6SBVkH4Nwvi3FO5ksXJtmFri8qAXYtto9PDk+X3SQbILNwNi1AbbVXWz4MC5glQqD+5wI5DOMvu3f9z/3cAquHV5W5u3P8l0wdkuMmG3PpHlCYPP765fgElJpCZEFsZN/I7w0Ta+NmyU9p+Qy/c1hI/nF2dy4E62oGNhqPhON9hSFxjJmPbfy+sTJndQMqjsdkPWvPA6fWB4P/fDv+lt8O28Jju+KRxgpv7V8wdsauBd2ZXA5LelWSRbq3XmoPX0W02ut1N9vz4sAlnjqSQ5ugSPZNGzzxMep36g1aH94nE1qqIyc+RL8P8zFPlM+C7F8vBg1tdRKsuCAW3Il0RljozhI9O8awoqOEjrUc9anPcgqSYpAf+C1qbEWY=","sidebar_class_name":"get api-method","info_path":"docs/openapi/managements/management-api","custom_edit_url":null},"sidebar":"orderApiSidebar","previous":{"title":"Get a device by IMEI","permalink":"/docs/openapi/managements/get-a-device-by-imei"},"next":{"title":"Create a new driver","permalink":"/docs/openapi/managements/create-a-new-driver"}}');var a=i(74848),s=i(28453),p=i(33617),r=i.n(p),o=i(17543),d=i.n(o),l=i(86013),c=i.n(l),g=i(63723),m=i.n(g),h=(i(18766),i(79329),i(9303));const u={id:"list-devices-with-pagination",title:"List devices with pagination",description:"FindAll handles HTTP GET requests to retrieve device records.",sidebar_label:"List devices with pagination",hide_title:!0,hide_table_of_contents:!0,api:"eJztVs1uGzcQfpUBTy0gyFKLXnwzmjR168ZGIvcSG8Jod6RlyiW35KxiRdDDFD30QfxineHqL/baQW5B0dMuyZn5Zj7OD9empFRE27AN3pyan6wvz5yDCn3pKMHPk8kVvHo5gUh/tpQ4AQf552hpSVDS0hYk6yLEMg1v/DlDapsmRBEM2SY6mFvHFK1fwGwFZLmiCDemdba8MRD039Zk5V8Q4goajFiTaKQBzFoGHxhmgStItm4do6fQJrcStCtcWI+KAjbtgKmEpUUx2uCCxKgEsl1Mk/1IvTAfxCkJZo5iXxyfwzirjUcDiS01VLBdUoacVAQ13oknNaBz4YPAqW1Q2+rFeDQSsTfEbfQJEH55e/k6Gwk+ERTBM1qvXAgNqqkBiI2OyaR0oAeKUX5qSklN23kW3t6Agli/RKFvK229RKFEd2qhKNqYhmZgDiGa03frBzd9paZ9W8/kNr7Zxn4K429Fz+p5ZkkWXkzIUoOUVSoqqtGcrg2vGt1X8AVFs9kMehEyL0f2hVLhT39Gz0Hlu3oe73ZgdrwmFfhuNNLPpz5c/ipGlHXyrKfYNM4WOWdO3icVWR9hNDE0FNl2BkvkvGuZ6vT4GFsOtVgqppr/C287yL2nsxAcoTcbcUC15opLU1seySTWusgikTQRpsiPkdgqLz1KOQseB/17Tg7JE45tTp+JGNC1ltLr64sL4eShk5v9Vpi9l4RX8yU5+tp8mjsi/pTEfUpIOhXFE/w+qSGtp1ehDhJ+70lTBU/TrnR6BVr3hBNtU35ll9xH8XYDY8RVjldLv5e8Q6X2HnNgdNN9+TwloFZ6BXrc1b0f+gr9fNcE31JcSkt7qb3wC2p/09lmXGizNC9yPzbSY6SBVkH4Nwvi3FO5ksXJtmFri8qAXYtto9PDk+X3SQbILNwNi1AbbVXWz4MC5glQqD+5wI5DOMvu3f9z/3cAquHV5W5u3P8l0wdkuMmG3PpHlCYPP765fgElJpCZEFsZN/I7w0Ta+NmyU9p+Qy/c1hI/nF2dy4E62oGNhqPhON9hSFxjJmPbfy+sTJndQMqjsdkPWvPA6fWB4P/fDv+lt8O28Jju+KRxgpv7V8wdsauBd2ZXA5LelWSRbq3XmoPX0W02ut1N9vz4sAlnjqSQ5ugSPZNGzzxMep36g1aH94nE1qqIyc+RL8P8zFPlM+C7F8vBg1tdRKsuCAW3Il0RljozhI9O8awoqOEjrUc9anPcgqSYpAf+C1qbEWY=",sidebar_class_name:"get api-method",info_path:"docs/openapi/managements/management-api",custom_edit_url:null},v=void 0,y={},f=[];function k(e){const t={p:"p",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"List devices with pagination"}),"\n",(0,a.jsx)(r(),{method:"get",path:"/devices",context:"endpoint"}),"\n",(0,a.jsx)(t.p,{children:'FindAll handles HTTP GET requests to retrieve device records.\nIt supports optional filtering by either "ulid" or "imei" query parameters, but not both simultaneously.\nPagination is supported via "page" and "page_size" query parameters, with defaults of 1 and 10, respectively.\nThe maximum allowed page size is 100.\nReturns a JSON response containing the paginated devices or an error message if the request is invalid or an internal error occurs.'}),"\n",(0,a.jsx)(h.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,a.jsx)(d(),{parameters:[{description:"Page number (default: 1)",in:"query",name:"page",schema:{type:"integer"}},{description:"Page size (default: 10, max: 100)",in:"query",name:"page_size",schema:{type:"integer"}}]}),"\n",(0,a.jsx)(c(),{title:"Body",body:void 0}),"\n",(0,a.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{data:{items:{properties:{automatic_recognition:{type:"boolean"},certificate_id:{type:"string"},created_at:{properties:{time:{type:"string"},valid:{description:"Valid is true if Time is not NULL",type:"boolean"}},type:"object"},deleted_at:{properties:{time:{type:"string"},valid:{description:"Valid is true if Time is not NULL",type:"boolean"}},type:"object"},fleet_id:{type:"integer"},iccid:{type:"string"},id:{type:"integer"},imei:{type:"string"},model:{type:"string"},phone_number:{type:"string"},ulid:{type:"string"},updated_at:{properties:{time:{type:"string"},valid:{description:"Valid is true if Time is not NULL",type:"boolean"}},type:"object"}},type:"object"},type:"array"},page:{type:"integer"},page_size:{type:"integer"},total_items:{type:"integer"},total_pages:{type:"integer"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{}}}}}})]})}function q(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(k,{...e})}):k(e)}}}]);