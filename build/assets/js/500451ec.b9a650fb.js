"use strict";(self.webpackChunkv3_docs=self.webpackChunkv3_docs||[]).push([[4050],{42664:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>R,contentTitle:()=>f,default:()=>y,frontMatter:()=>h,metadata:()=>n,toc:()=>j});const n=JSON.parse('{"id":"openapi/managements/list-accounts-with-pagination","title":"List accounts with pagination","description":"FindAll handles HTTP GET requests to retrieve a paginated list of accounts.","source":"@site/docs/openapi/managements/list-accounts-with-pagination.api.mdx","sourceDirName":"openapi/managements","slug":"/openapi/managements/list-accounts-with-pagination","permalink":"/docs/openapi/managements/list-accounts-with-pagination","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-accounts-with-pagination","title":"List accounts with pagination","description":"FindAll handles HTTP GET requests to retrieve a paginated list of accounts.","sidebar_label":"List accounts with pagination","hide_title":true,"hide_table_of_contents":true,"api":"eJztVk1vGzcQ/SuDPSWAYMstclFPRvNRt25sNHYvkWFQu7MSUy65JbmKFUE/JuihP8R/LG+4a0mOVjbcXnLISeJw573hmw9ymRUccq/rqJ3NRtlrbYtjY2imbGE40C8XF+f05tUFef674RADRYf/0WueMymq1VRbFbkgo0MkV5LKc9fYGA7G9iRSaOraebi5xKAMldpE9tpOabKgy9OTlzTXiuKMaZw1RhfjjMDkF4D2qmJ8C6TzlgYIpAPlzkbvjAErMFpXBMJwRdjd4jroT7wLFgZj+1HHGRVcqsZEmiuDg0nkR8n7aDjAAUPNedRzNotBsiqq1I2umkpOzCTYyWU4lHPi1O1REFzt3VwXXAxIRyo55jOgS4ydMM/Cc2DBLBKIXRx/GluH//6jDpwcIXHjbehXGPnZUvnMQuU85xA6z1A7WwRKp9wiDqQt/fru7C2VziOCdK6U3x+GQwpRxaaDY++d7wFT3RZVIBMZ1ggvNgjZINuInY3eL7+qsHNxtE01YU/PuiSM6Og5/LTsp3xhYQGBpciNVYCMlcpGyywuarFrG3nKPlutBr0MKUNb+MgqMih/hg9Rpap5Il/KPNqi1KlQpHR0qfM73fewSa33EYUozQGeq0HWyh84yD6yJD/3uc9+A4b0A4MIu6qujc5Tpxx+CPLJcosCtVmzj7oFLFRMVh25CrvbudEAvUaUu8EJp/dsEtHeTzxL3V6ruAsetYjQ44R2bOHun/NPMUt7Rd8w6ZIuACBr9A29vTw9hQwd1sQ5w8pKpu5MbvIB7SzwBRv+1mK6J9+6zu4KpSceJFvtz0xj9m3UxTeWjz41OoPyXi1knQZArz6bfu3dji4qc70u7n0fCErvBz3hiu1FXxuewMnL7faO/RyD7ZWMySd05qrFjmoqIzM77iYHRgDm6MwhAdmUYxqtcYbF4Wa2hMTYTtrGG9k8nP8YMJon7uYgd1Umk0Tb0qWmRkAql4BSM2yf4TjFd/vv7T+OuKI3Z930D7efcQ8SrnEYkPZPypOjn/+4fEmFCoRHgW9wWeHvRAWW+R91NKLb78pC3AoC0PH5CTYk0JZseDA8OEpJdCFWKqnRDcZTuebWd1a6eOr19Z99FfVyI/H3t8v3t8v/f7t0LR/5Jh7WRuHmlskpfbXsmu99pjbtOUP5imm5lOK/9Ga1EnN716fHjw5qgmxno1IZCLS/fB94GPUG9RcvNu+jVAlYZul58jTOR55Kj5DfvZj+YwSPP54e4O/eUBvqK1l4LdxQ/wofzlgVmOaSitYHs5XruOW1M5hX22MX8wOD/wuctojk","sidebar_class_name":"get api-method","info_path":"docs/openapi/managements/management-api","custom_edit_url":null},"sidebar":"orderApiSidebar","previous":{"title":"Introduction","permalink":"/docs/openapi/managements/management-api"},"next":{"title":"Create a new account","permalink":"/docs/openapi/managements/create-a-new-account"}}');var a=i(74848),s=i(28453),o=i(33617),p=i.n(o),r=i(17543),c=i.n(r),u=i(86013),d=i.n(u),l=i(63723),m=i.n(l),g=(i(18766),i(79329),i(9303));const h={id:"list-accounts-with-pagination",title:"List accounts with pagination",description:"FindAll handles HTTP GET requests to retrieve a paginated list of accounts.",sidebar_label:"List accounts with pagination",hide_title:!0,hide_table_of_contents:!0,api:"eJztVk1vGzcQ/SuDPSWAYMstclFPRvNRt25sNHYvkWFQu7MSUy65JbmKFUE/JuihP8R/LG+4a0mOVjbcXnLISeJw573hmw9ymRUccq/rqJ3NRtlrbYtjY2imbGE40C8XF+f05tUFef674RADRYf/0WueMymq1VRbFbkgo0MkV5LKc9fYGA7G9iRSaOraebi5xKAMldpE9tpOabKgy9OTlzTXiuKMaZw1RhfjjMDkF4D2qmJ8C6TzlgYIpAPlzkbvjAErMFpXBMJwRdjd4jroT7wLFgZj+1HHGRVcqsZEmiuDg0nkR8n7aDjAAUPNedRzNotBsiqq1I2umkpOzCTYyWU4lHPi1O1REFzt3VwXXAxIRyo55jOgS4ydMM/Cc2DBLBKIXRx/GluH//6jDpwcIXHjbehXGPnZUvnMQuU85xA6z1A7WwRKp9wiDqQt/fru7C2VziOCdK6U3x+GQwpRxaaDY++d7wFT3RZVIBMZ1ggvNgjZINuInY3eL7+qsHNxtE01YU/PuiSM6Og5/LTsp3xhYQGBpciNVYCMlcpGyywuarFrG3nKPlutBr0MKUNb+MgqMih/hg9Rpap5Il/KPNqi1KlQpHR0qfM73fewSa33EYUozQGeq0HWyh84yD6yJD/3uc9+A4b0A4MIu6qujc5Tpxx+CPLJcosCtVmzj7oFLFRMVh25CrvbudEAvUaUu8EJp/dsEtHeTzxL3V6ruAsetYjQ44R2bOHun/NPMUt7Rd8w6ZIuACBr9A29vTw9hQwd1sQ5w8pKpu5MbvIB7SzwBRv+1mK6J9+6zu4KpSceJFvtz0xj9m3UxTeWjz41OoPyXi1knQZArz6bfu3dji4qc70u7n0fCErvBz3hiu1FXxuewMnL7faO/RyD7ZWMySd05qrFjmoqIzM77iYHRgDm6MwhAdmUYxqtcYbF4Wa2hMTYTtrGG9k8nP8YMJon7uYgd1Umk0Tb0qWmRkAql4BSM2yf4TjFd/vv7T+OuKI3Z930D7efcQ8SrnEYkPZPypOjn/+4fEmFCoRHgW9wWeHvRAWW+R91NKLb78pC3AoC0PH5CTYk0JZseDA8OEpJdCFWKqnRDcZTuebWd1a6eOr19Z99FfVyI/H3t8v3t8v/f7t0LR/5Jh7WRuHmlskpfbXsmu99pjbtOUP5imm5lOK/9Ga1EnN716fHjw5qgmxno1IZCLS/fB94GPUG9RcvNu+jVAlYZul58jTOR55Kj5DfvZj+YwSPP54e4O/eUBvqK1l4LdxQ/wofzlgVmOaSitYHs5XruOW1M5hX22MX8wOD/wuctojk",sidebar_class_name:"get api-method",info_path:"docs/openapi/managements/management-api",custom_edit_url:null},f=void 0,R={},j=[];function w(e){const t={p:"p",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(g.default,{as:"h1",className:"openapi__heading",children:"List accounts with pagination"}),"\n",(0,a.jsx)(p(),{method:"get",path:"/account",context:"endpoint"}),"\n",(0,a.jsx)(t.p,{children:'FindAll handles HTTP GET requests to retrieve a paginated list of accounts.\nIt supports optional filtering by ULID via the "ulid" query parameter.\nPagination is controlled by the "page" and "page_size" query parameters,\nwith default values of 1 and 10, respectively, and a maximum page size of 100.\nIf a ULID is provided, it fetches the account(s) matching the ULID;\notherwise, it returns a paginated list of all accounts.\nOn success, it responds with the accounts in JSON format and HTTP 200 status.\nOn error, it responds with an error message and HTTP 500 status.'}),"\n",(0,a.jsx)(g.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,a.jsx)(c(),{parameters:[{description:"Page number (default: 1)",in:"query",name:"page",schema:{type:"integer"}},{description:"Page size (default: 10, max: 100)",in:"query",name:"page_size",schema:{type:"integer"}},{description:"ULID to find a specific account",in:"query",name:"ulid",schema:{type:"string"}}]}),"\n",(0,a.jsx)(d(),{title:"Body",body:void 0}),"\n",(0,a.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{data:{items:{properties:{client_id:{type:"string"},correlation_id:{type:"string"},created_at:{properties:{time:{type:"string"},valid:{description:"Valid is true if Time is not NULL",type:"boolean"}},type:"object"},deleted_at:{properties:{time:{type:"string"},valid:{description:"Valid is true if Time is not NULL",type:"boolean"}},type:"object"},id:{type:"integer"},name:{type:"string"},tenant_id:{type:"string"},ulid:{type:"string"},updated_at:{properties:{time:{type:"string"},valid:{description:"Valid is true if Time is not NULL",type:"boolean"}},type:"object"}},type:"object"},type:"array"},page:{type:"integer"},page_size:{type:"integer"},total_items:{type:"integer"},total_pages:{type:"integer"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{}}}}}})]})}function y(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(w,{...e})}):w(e)}}}]);