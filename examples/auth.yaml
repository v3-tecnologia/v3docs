basePath: /
definitions:
  auth.VerifyResponse:
    properties:
      claims: {}
      message:
        type: string
      valid:
        type: boolean
    type: object
  keycloak.TokenPayload:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_expires_in:
        type: integer
      refresh_token:
        type: string
      scope:
        type: string
      token_type:
        type: string
    type: object
  response.StandardError:
    properties:
      error:
        type: string
      error_description:
        type: string
    type: object
host: v3sandbox.com
info:
  contact: {}
  description: Serviço em Go que atua como proxy para autenticação e verificação de
    tokens do Keycloak, oferecendo endpoints simplificados para obtenção e validação
    de tokens JWT
  title: Auth API
  version: 0.0.1
paths:
  /auth/token:
    get:
      consumes:
        - application/json
      description: |-
        This endpoint allows clients to validate an existing authentication token.
        When a token is sent, the system checks whether it is still valid and trusted.
        On success, it returns a JSON response with token details (claims).
        If the token is invalid, expired, or malformed, a structured error is returned.
      parameters:
        - description: Bearer token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.VerifyResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.StandardError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.StandardError'
      summary: Validate an Authentication Token
      tags:
        - Auth
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: |-
        Token handles the generation of an authentication token using Keycloak credentials.
        It receives a Fiber context, extracts the necessary configuration from the AuthHandler,
        and calls the keycloak.GenerateToken function. If token generation fails, it returns
        an error response with the appropriate status code and error message. On success,
        it returns the generated token as a JSON response.
      parameters:
        - description: Grant type
          in: formData
          name: grant_type
          required: true
          type: string
        - description: Client ID
          in: formData
          name: client_id
          required: true
          type: string
        - description: Client Secret
          in: formData
          name: client_secret
          required: true
          type: string
        - description: Username
          in: formData
          name: username
          required: true
          type: string
        - description: Password
          in: formData
          name: password
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/keycloak.TokenPayload'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.StandardError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.StandardError'
      summary: Generate token from Keycloak
      tags:
        - Auth
    put:
      consumes:
        - application/x-www-form-urlencoded
      description: |-
        This endpoint allows clients to refresh an existing authentication token.
        When a token is sent, the system checks whether it is still valid and trusted.
        On success, it returns a JSON response with the new token details.
        If the token is invalid, expired, or malformed, a structured error is returned.
        To refresh a token, provide the refresh token via form data.
        On success, a JSON payload with the new access token and related metadata will be returned.
        In case of invalid credentials or an internal error, a structured error response is returned.
      parameters:
        - description: 'Grant type: must be `refresh_token`'
          in: formData
          name: grant_type
          required: true
          type: string
        - description: Client ID
          in: formData
          name: client_id
          required: true
          type: string
        - description: Client Secret
          in: formData
          name: client_secret
          required: true
          type: string
        - description: Valid refresh token
          in: formData
          name: refresh_token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/keycloak.TokenPayload'
        "400":
          description: 'Bad Request: invalid or missing form data'
          schema:
            $ref: '#/definitions/response.StandardError'
        "401":
          description: 'Unauthorized: invalid or expired refresh token'
          schema:
            $ref: '#/definitions/response.StandardError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.StandardError'
      summary: Refresh an Authentication Token
      tags:
        - Auth
swagger: "2.0"
